{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/tours-react/src/Components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { data } from \"../data\";\nimport { FiRefreshCw } from 'react-icons/fi';\nimport Loader from \"react-loader-spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = () => {\n  _s();\n\n  const [cities, setCities] = useState(data);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const eventHandler = name => {\n    const newCities = cities.filter(item => item.name !== name);\n    setCities(newCities);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 2000);\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        className: \"text-center\",\n        type: \"radio\",\n        color: \"#00BFFF\",\n        height: 100,\n        width: 100,\n        timeout: 3000 //3 secs\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: cities.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Our Tours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), cities.map(city => {\n        const {\n          img,\n          name,\n          days,\n          price,\n          information\n        } = city;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card \",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"card-header\",\n              src: img,\n              alt: `${name} Photo`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"section\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"fs-5 fw-bold\",\n                  children: [`Best Of ${name} in ${days} days`, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 30\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pt-1\",\n                  children: [\" \", price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 100\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: information\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm  btn-outline-danger\",\n                  type: \"button\",\n                  onClick: () => eventHandler(name),\n                  children: \" Not Interested\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" No Tours Left \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-sm btn-outline-success\",\n        onClick: () => setCities(data),\n        children: [/*#__PURE__*/_jsxDEV(FiRefreshCw, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 94\n        }, this), \" Refresh\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"6IE++tztJ+zW8jBmW4s/QOPdwQk=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/user/WebstormProjects/tours-react/src/Components/Card.js"],"names":["React","useEffect","useState","data","FiRefreshCw","Loader","Card","cities","setCities","isLoading","setIsLoading","eventHandler","name","newCities","filter","item","setTimeout","length","map","city","img","days","price","information"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {data} from \"../data\";\nimport {FiRefreshCw} from 'react-icons/fi'\nimport Loader from \"react-loader-spinner\";\n\n\nconst Card = () => {\n  const [cities, setCities] = useState(data);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const eventHandler = (name) => {\n    const newCities = cities.filter(item => item.name !== name);\n    setCities(newCities)\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false)\n    }, 2000)\n\n  }, []);\n\n  if (isLoading) {\n    return (\n      <div>\n        <Loader className=\"text-center\"\n                type=\"radio\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n                timeout={3000} //3 secs\n        />\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      {cities.length ?\n        <div>\n          <h1>Our Tours</h1>\n          {cities.map(city => {\n            const {img, name, days, price, information} = city;\n            return (\n              <div className=\"container\">\n                <div className=\"card \">\n                  <img className=\"card-header\" src={img} alt={`${name} Photo`}/>\n                  <div className=\"card-body\">\n                    <section><h6 className=\"fs-5 fw-bold\">{`Best Of ${name} in ${days} days`} </h6><span className=\"pt-1\"> {price}</span></section>\n                    <p>{information}</p>\n                    <div>\n                      <button className=\"btn btn-sm  btn-outline-danger\" type=\"button\"\n                              onClick={() => eventHandler(name)}> Not Interested\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n        :\n        <div>\n          <h1> No Tours Left </h1>\n          <button className=\"btn btn-sm btn-outline-success\" onClick={() => setCities(data)}><FiRefreshCw/> Refresh\n          </button>\n        </div>\n      }\n    </div>\n  );\n};\n\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}