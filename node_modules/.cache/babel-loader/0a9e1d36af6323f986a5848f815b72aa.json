{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/tours-react/src/Components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { data } from \"../data\";\nimport { FiRefreshCw } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = () => {\n  _s();\n\n  const [cities, setCities] = useState(data);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const eventHandler = name => {\n    const newCities = cities.filter(item => item.name !== name);\n    setCities(newCities);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1000);\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"is Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: cities.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Our Tours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), cities.map(city => {\n        const {\n          img,\n          name,\n          days,\n          price,\n          information\n        } = city;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm  mt-5 \",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"rounded img-fluid\",\n              src: img,\n              alt: `${name} Photo`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: [`Best Of ${name} in ${days} days`, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 30\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 75\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: information\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-grid\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm  brn-block btn-outline-danger\",\n                type: \"button\",\n                onClick: () => eventHandler(name),\n                children: \" Not Interested\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" No Tours Left \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-sm btn-outline-success\",\n        onClick: () => setCities(data),\n        children: [\" \", /*#__PURE__*/_jsxDEV(FiRefreshCw, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 97\n        }, this), \"  Refresh\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Card, \"h4olrSphRUqQnBKsiIDoePCxyMc=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/user/WebstormProjects/tours-react/src/Components/Card.js"],"names":["React","useEffect","useState","data","FiRefreshCw","Card","cities","setCities","isLoading","setIsLoading","eventHandler","name","newCities","filter","item","setTimeout","length","map","city","img","days","price","information"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,SAAnB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;;;AAIA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAACC,IAAD,CAApC;AACA,QAAM,CAACK,SAAD,EAAWC,YAAX,IAA2BP,QAAQ,CAAC,IAAD,CAAzC;;AACA,QAAMQ,YAAY,GAAIC,IAAD,IAAU;AAC7B,UAAMC,SAAS,GAAEN,MAAM,CAACO,MAAP,CAAcC,IAAI,IAAIA,IAAI,CAACH,IAAL,KAAcA,IAApC,CAAjB;AACAJ,IAAAA,SAAS,CAACK,SAAD,CAAT;AACD,GAHD;;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,UAAU,CAAC,MAAI;AACfN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACC,KAFS,EAER,IAFQ,CAAV;AAID,GALQ,EAKP,EALO,CAAT;;AAMA,MAAID,SAAJ,EAAe;AACb,wBACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACI;AAAA,cACGF,MAAM,CAACU,MAAP,gBACC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGV,MAAM,CAACW,GAAP,CAAWC,IAAI,IAAI;AAClB,cAAM;AAACC,UAAAA,GAAD;AAAMR,UAAAA,IAAN;AAAYS,UAAAA,IAAZ;AAAkBC,UAAAA,KAAlB;AAAyBC,UAAAA;AAAzB,YAAwCJ,IAA9C;AACA,4BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAmC,cAAA,GAAG,EAAEC,GAAxC;AAA6C,cAAA,GAAG,EAAG,GAAER,IAAK;AAA1D;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,sCAAS;AAAA,2BAAM,WAAUA,IAAK,OAAMS,IAAK,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAT,eAAsD;AAAA,0BAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,sBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,wBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,qCACA;AAAQ,gBAAA,SAAS,EAAC,0CAAlB;AAA6D,gBAAA,IAAI,EAAC,QAAlE;AAA2E,gBAAA,OAAO,EAAE,MAAMZ,YAAY,CAACC,IAAD,CAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAaD,OAfA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAqBC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,gCAAlB;AAAmD,QAAA,OAAO,EAAE,MAAMJ,SAAS,CAACJ,IAAD,CAA3E;AAAA,qCAAoF,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAApF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BD,CApDD;;GAAME,I;;KAAAA,I;AAuDN,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {data} from \"../data\";\nimport {FiRefreshCw} from 'react-icons/fi'\n\n\n\nconst Card = () => {\n  const [cities ,setCities] = useState(data);\n  const [isLoading,setIsLoading] = useState(true);\n  const eventHandler = (name) => {\n    const newCities =cities.filter(item => item.name !== name);\n    setCities(newCities)\n  }\n\n  useEffect(() => {\n    setTimeout(()=>{\n    setIsLoading(false)\n    },1000)\n\n  },[])\n  if (isLoading) {\n    return (\n      <div>\n        <h1>is Loading ...</h1>\n      </div>\n    )\n  }\n\n  return (\n      <div>\n        {cities.length ?\n          <div>\n            <h1>Our Tours</h1>\n            {cities.map(city => {\n              const {img, name, days, price, information} = city;\n              return (\n                <div className=\"row\">\n                  <div className=\"col-sm  mt-5 \">\n                    <img className=\"rounded img-fluid\" src={img} alt={`${name} Photo`}/>\n                    <section><h6>{`Best Of ${name} in ${days} days`} </h6><span>{price}</span></section>\n                    <p>{information}</p>\n                    <div className='d-grid'>\n                    <button className=\"btn btn-sm  brn-block btn-outline-danger\" type=\"button\" onClick={() => eventHandler(name)}> Not Interested</button>\n                    </div>\n                  </div>\n                  </div>\n\n              )\n            })}\n          </div>\n          :\n          <div>\n            <h1> No Tours Left </h1>\n            <button className=\"btn btn-sm btn-outline-success\" onClick={() => setCities(data)}> <FiRefreshCw />  Refresh\n            </button>\n          </div>}\n      </div>\n  );\n};\n\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}