{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/tours-react/src/Components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { data } from \"../data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = () => {\n  _s();\n\n  const [cities, setCities] = useState(data);\n  const [isShow, setIsShow] = useState(false);\n\n  const eventHandler = name => {\n    setCities(cities.filter(item => item.name !== name));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: cities.length || isShow ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Our Tours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), cities.map(city => {\n        const {\n          img,\n          name,\n          days,\n          price,\n          information\n        } = city;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: img,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"section\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: [`Best Of ${name} in ${days} days`, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 73\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: information\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => eventHandler(name),\n              children: \" Not Interested\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" No Tours Left \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsShow(prevState => prevState),\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"Ok7EvNiErysC4XReIJb2EGDqXRg=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/user/WebstormProjects/tours-react/src/Components/Card.js"],"names":["React","useState","data","Card","cities","setCities","isShow","setIsShow","eventHandler","name","filter","item","length","map","city","img","days","price","information","prevState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,IAAR,QAAmB,SAAnB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAACC,IAAD,CAApC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMO,YAAY,GAAIC,IAAD,IAAU;AAC7BJ,IAAAA,SAAS,CAACD,MAAM,CAACM,MAAP,CAAcC,IAAI,IAAIA,IAAI,CAACF,IAAL,KAAcA,IAApC,CAAD,CAAT;AACD,GAFD;;AAGA,sBACE;AAAA,cACGL,MAAM,CAACQ,MAAP,IAAgBN,MAAhB,gBACC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGF,MAAM,CAACS,GAAP,CAAWC,IAAI,IAAI;AAClB,cAAM;AAACC,UAAAA,GAAD;AAAMN,UAAAA,IAAN;AAAYO,UAAAA,IAAZ;AAAkBC,UAAAA,KAAlB;AAAyBC,UAAAA;AAAzB,YAAwCJ,IAA9C;AACA,4BACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACE;AAAK,cAAA,GAAG,EAAEC,GAAV;AAAe,cAAA,GAAG,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AAAA,sCAAS;AAAA,2BAAM,WAAUN,IAAK,OAAMO,IAAK,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAT,eAAsD;AAAA,0BAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,sBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAQ,cAAA,OAAO,EAAE,MAAMV,YAAY,CAACC,IAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAYD,OAdA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAqBC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMF,SAAS,CAACY,SAAS,IAAIA,SAAd,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBJ;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CApCD;;GAAMhB,I;;KAAAA,I;AAwCN,eAAeA,IAAf","sourcesContent":["import React, {useState} from \"react\";\nimport {data} from \"../data\";\n\nconst Card = () => {\n  const [cities, setCities] = useState(data)\n  const [isShow, setIsShow] = useState(false);\n  const eventHandler = (name) => {\n    setCities(cities.filter(item => item.name !== name))\n  }\n  return (\n    <div>\n      {cities.length ||isShow ?\n        <div>\n          <h1>Our Tours</h1>\n          {cities.map(city => {\n            const {img, name, days, price, information} = city;\n            return (\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <img src={img} alt=\"\"/>\n                </div>\n                <div className=\"card-body\">\n                  <section><h6>{`Best Of ${name} in ${days} days`} </h6><span>{price}</span></section>\n                  <p>{information}</p>\n                  <button onClick={() => eventHandler(name)}> Not Interested</button>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n\n      :\n        <div>\n          <h1> No Tours Left </h1>\n          <button onClick={() => setIsShow(prevState => prevState)}>Refresh\n          </button>\n       </div> }\n    </div>\n  );\n};\n\n\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}